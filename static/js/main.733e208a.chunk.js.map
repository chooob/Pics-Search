{"version":3,"sources":["components/SearchBar.js","api/unsplash.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["SearchBar","props","onInput","event","setState","term","target","value","onFormSubmit","preventDefault","runWhenSubmit","state","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","headers","Authorization","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","style","gridRowEnd","alt","image","description","src","urls","regular","ref","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","console","log","data","results","marginTop","ReactDOM","render","document","getElementById"],"mappings":"sPA6CeA,E,kDA1Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,QAAU,SAACC,GACT,EAAKC,SAAS,CAAEC,KAAMF,EAAMG,OAAOC,SAdlB,EAiBnBC,aAAe,SAACL,GACdA,EAAMM,iBAGN,EAAKR,MAAMS,cAAc,EAAKC,MAAMN,OAlBpC,EAAKM,MAAQ,CAAEN,KAAM,IAHJ,E,qDAyBjB,OACE,yBAAKO,UAAU,cACb,0BAAMC,SAAUC,KAAKN,aAAcI,UAAU,WAC3C,yBAAKA,UAAU,SACb,gDACA,2BACEG,KAAK,OACLC,SAAUF,KAAKZ,QACfK,MAAOO,KAAKH,MAAMN,c,GAlCRY,IAAMC,W,QCAfC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAe,2DC8BJC,G,wDAhCb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAURwB,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjC,EAAKtB,SAAS,CAAE0B,MAAOA,KAbvB,EAAKnB,MAAQ,CAAEmB,MAAO,GACtB,EAAKH,SAAWV,IAAMgB,YAJL,E,gEAQjBnB,KAAKa,SAASC,QAAQM,iBAAiB,OAAQpB,KAAKW,Y,+BAYpD,OACE,yBAAKU,MAAO,CAAEC,WAAW,QAAD,OAAUtB,KAAKH,MAAMmB,SAC3C,yBACEO,IAAKvB,KAAKb,MAAMqC,MAAMC,YACtBC,IAAK1B,KAAKb,MAAMqC,MAAMG,KAAKC,QAC3BC,IAAK7B,KAAKa,gB,GA1BIV,IAAMC,YCWf0B,EATG,SAAC3C,GACjB,IAAM4C,EAAS5C,EAAM4C,OAAOC,KAAI,SAACR,GAE/B,OAAO,kBAAC,EAAD,CAAWS,IAAKT,EAAMU,GAAIV,MAAOA,OAG1C,OAAO,yBAAK1B,UAAU,cAAciC,ICyBvBI,E,4MA7BbtC,MAAQ,CAAEkC,OAAQ,I,EAOlBK,e,uCAAiB,WAAO7C,GAAP,eAAA8C,EAAA,sEACQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAOlD,KAFJ,OACTmD,EADS,OAQfC,QAAQC,IAAIF,EAASG,KAAKC,SAC1B,EAAKxD,SAAS,CAAEyC,OAAQW,EAASG,KAAKC,UATvB,2C,6GAaf,OACE,yBAAKhD,UAAU,eAAeuB,MAAO,CAAE0B,UAAW,SAChD,kBAAC,EAAD,CAAWnD,cAAeI,KAAKoC,iBAC/B,kBAAC,EAAD,CAAWL,OAAQ/B,KAAKH,MAAMkC,c,GAxBpB5B,IAAMC,WCDxB4C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.733e208a.chunk.js","sourcesContent":["import React from \"react\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { term: \"\" };\n    //this.onInput = this.onInput.bind(this);\n  }\n\n  // onInput(event){\n  //   this.setState({ term: event.target.value });\n  // }\n\n  //arrow function are automatically binded with this other wise have to define bind function with this in the\n  //consturctor\n  onInput = (event) => {\n    this.setState({ term: event.target.value });\n  };\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    //when using props in a class based component have to add \"this.props\"\n    //when using props in a function based components can just call \"props.\" directly\n    this.props.runWhenSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label>Image Search </label>\n            <input\n              type=\"text\"\n              onChange={this.onInput}\n              value={this.state.term}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.unsplash.com\",\n  headers: {\n    Authorization: \"Client-ID yqD2S3VmaIYNBERtb-TTfY36BnAMvm-7pi4IlKoOT7U\",\n  },\n});\n","import React from \"react\";\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { spans: 0 };\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n\n    const spans = Math.ceil(height / 10);\n\n    this.setState({ spans: spans });\n  };\n\n  render() {\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img\n          alt={this.props.image.description}\n          src={this.props.image.urls.regular}\n          ref={this.imageRef}\n        ></img>\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./ImageList.css\";\nimport ImageCard from \"./ImageCard\";\n\nconst ImageList = (props) => {\n  const images = props.images.map((image) => {\n    //add key tag to root component we are returning with map\n    return <ImageCard key={image.id} image={image} />;\n  });\n\n  return <div className=\"image-list\">{images}</div>;\n};\n\nexport default ImageList;\n","import React from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport unsplash from \"../api/unsplash\";\nimport ImageList from \"./ImageList\";\n\nclass App extends React.Component {\n  state = { images: [] };\n\n  //two methods to access response from unsplash async/await or .then()\n\n  //setState error\n  //original async onSearchSubmit (term) {}\n  //Arrow Function is below async keyword has to be placed before the argument\n  onSearchSubmit = async (term) => {\n    const response = await unsplash.get(\"/search/photos\", {\n      params: { query: term },\n    });\n    //get response passing in function to access the responses logging response in this case\n    // .then((reponse) => {\n    //   console.log(reponse.data.results);\n    // });\n    console.log(response.data.results);\n    this.setState({ images: response.data.results });\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\n        <SearchBar runWhenSubmit={this.onSearchSubmit} />\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}